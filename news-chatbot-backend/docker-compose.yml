version: '3.8'

services:
  backend:
    build: .
    container_name: news-backend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - redis
      - qdrant
    environment:
      - REDIS_URL=redis://localhost:6379
      - MYSQL_HOST=news-mysql
      - MYSQL_USER=chatbot
      - MYSQL_PASSWORD=chatpass
      - MYSQL_DB=news_chatbot
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - JINA_API_KEY=${JINA_API_KEY}
      - QDRANT_URL=http://localhost:6333
      - QDRANT_COLLECTION=news
    networks:
      - backend

  mysql:
    image: mysql:8.0
    container_name: news-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: news_chatbot
      MYSQL_USER: chatbot
      MYSQL_PASSWORD: chatpass
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend

  redis:
    image: redis:7.2-alpine
    container_name: news-redis
    restart: always
    command: redis-server --requirepass redispass
    ports:
      - "6379:6379"
    networks:
      - backend

  qdrant:
    image: qdrant/qdrant
    container_name: news-qdrant
    restart: always
    ports:
      - "6333:6333"
    volumes:
      - qdrant-data:/qdrant/storage
    networks:
      - backend

volumes:
  mysql-data:
  qdrant-data:

networks:
  backend:
    driver: bridge
